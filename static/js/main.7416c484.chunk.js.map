{"version":3,"sources":["context.js","components/layout/Header.js","components/layout/TextInput.js","APIKeys.js","components/layout/SearchForm.js","components/weather/FiveDayDisplay.js","components/weather/FiveDayForecast.js","components/weather/CurrentWeather.js","components/weather/WeatherDashboard.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","_action$payload$city","payload","city","name","country","list","Object","objectSpread","currentWeather","condition","weather","description","temperature","main","temp","toFixed","humidity","wind","speed","icon","error","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","Header","className","classnames","bg-danger","TextInput","_ref","label","placeholder","onChange","htmlFor","is-invalid","API_KEY","weatherAPI","SearchForm","zipcode","e","defineProperty","target","onResetClick","preventDefault","console","log","getWeather","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","t0","stop","_this2","onSubmit","bind","TextInput_TextInput","onClick","FiveDayDisplay","forecast","week","map","day","date","Date","dt_txt","getDay","style","width","height","src","alt","FiveDayForecast","dailyForecast","i","push","weather_FiveDayDisplay","CurrentWeather","WeatherDashboard","_value$currentWeather","Fragment","weather_CurrentWeather","weather_FiveDayForecast","App","context_Provider","layout_Header","layout_SearchForm","weather_WeatherDashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7416c484.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_LOCATION':\n      const { name, country } = action.payload.city;\n      const { list } = action.payload;\n      return {\n        ...state,\n        city: name,\n        country,\n        list,\n        currentWeather: {\n          condition: list[0].weather[0].description,\n          temperature: (((list[0].main.temp - 273.15) * 9) / 5 + 32).toFixed(0),\n          humidity: list[0].main.humidity,\n          wind: list[0].wind.speed,\n          icon: list[0].weather[0].icon\n        },\n        error: ''\n      };\n    case 'RESET_FORM':\n      return {\n        ...state,\n        city: '',\n        country: '',\n        list: '',\n        currentWeather: '',\n        error: ''\n      };\n    case 'ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    city: '',\n    country: '',\n    list: '',\n    currentWeather: '',\n    error: '',\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport classnames from 'classnames';\n\nclass Header extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { city, country, error } = value;\n\n          return (\n            <div className=\"container\">\n              <div className=\"card mt-5 mb-3\">\n                <div\n                  className={classnames(\n                    'card-body bg-primary text-white text-center',\n                    { 'bg-danger': error }\n                  )}\n                >\n                  <h3 className=\"display-3\">\n                    {city ? `${city}, ${country}` : 'Weather Conditions'}\n                  </h3>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport const TextInput = ({\n  name,\n  label,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control', { 'is-invalid': error })}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n","const API_KEY = {\n  weatherAPI: '20dcc09738b693710bd6fab74bc9f6b0'\n};\n\nexport default API_KEY;\n","import React, { Component } from 'react';\nimport { TextInput } from './TextInput';\nimport API_KEY from '../../APIKeys';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass SearchForm extends Component {\n  state = {\n    zipcode: ''\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onResetClick = (dispatch, e) => {\n    e.preventDefault();\n\n    this.setState({ zipcode: '' });\n\n    dispatch({\n      type: 'RESET_FORM'\n    });\n    console.log(e);\n  };\n\n  getWeather = async (dispatch, e) => {\n    e.preventDefault();\n    const { zipcode } = this.state;\n\n    try {\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?zip=${zipcode}&appid=${\n          API_KEY.weatherAPI\n        }`\n      );\n\n      dispatch({ type: 'UPDATE_LOCATION', payload: res.data });\n    } catch (e) {\n      dispatch({\n        type: 'ERROR',\n        payload: 'Please enter a valid US zip code.'\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch, error } = value;\n          return (\n            <div className=\"d-flex row-hl justify-content-center\">\n              <form\n                className=\"form-inline mb-2 item-hl\"\n                onSubmit={this.getWeather.bind(this, dispatch)}\n              >\n                <TextInput\n                  type=\"text\"\n                  name=\"zipcode\"\n                  placeholder=\"Enter Zip Code...\"\n                  value={this.state.zipcode}\n                  onChange={this.onChange}\n                  error={error}\n                />\n                <button className=\"btn btn-outline-primary mx-2\">Search</button>\n                <div\n                  className=\"btn btn-outline-secondary item-hl\"\n                  onClick={this.onResetClick.bind(this, dispatch)}\n                >\n                  Reset Form\n                </div>\n              </form>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\n\nconst FiveDayDisplay = props => {\n  const { forecast } = props;\n\n  const week = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n  return (\n    <div className=\"d-flex justify-content-around row-hl\">\n      {forecast.map(day => {\n        let date = new Date(day.dt_txt).getDay();\n        return (\n          <div className=\"item-hl\" key={date}>\n            <div\n              className=\"card text-center border-primary\"\n              style={{ width: '150px', height: '200px' }}\n            >\n              <div className=\"card-body\">\n                <h4>{week[date]}</h4>\n\n                <img\n                  src={`http://openweathermap.org/img/w/${\n                    day.weather[0].icon\n                  }.png`}\n                  alt=\"\"\n                />\n                <h4>\n                  {(((day.main.temp - 273.15) * 9) / 5 + 32).toFixed(0)}° F\n                </h4>\n                <p>{day.weather[0].description}</p>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default FiveDayDisplay;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport FiveDayDisplay from './FiveDayDisplay';\n\nclass FiveDayForecast extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { list } = value;\n          let dailyForecast = [];\n\n          for (let i = 0; i < list.length; i += 8) {\n            dailyForecast.push(list[i]);\n          }\n\n          return (\n            <div className=\"container\">\n              <div className=\"card mt-2 mb-3\">\n                <div className=\"card-body bg-primary text-white text-center\">\n                  <h3 className=\"display-4\">Five Day Forecast</h3>\n                  {console.log(dailyForecast)}\n                </div>\n              </div>\n              <FiveDayDisplay forecast={dailyForecast} />\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default FiveDayForecast;\n","import React from 'react';\n\nconst CurrentWeather = props => {\n  return (\n    <div className=\"d-flex justify-content-center row-hl\">\n      <div className=\"item-hl p-3 align-self-center\">\n        <h2 className=\"display-3\">\n          <strong>{props.temperature}° F</strong>\n        </h2>\n      </div>\n\n      <div className=\"item-hl p-3\">\n        <h4>\n          {props.condition}\n          <img\n            src={`http://openweathermap.org/img/w/${props.icon}.png`}\n            alt=\"\"\n          />\n        </h4>\n        <h4>Humidity: {props.humidity}%</h4>\n        <h4>Wind Speed: {props.wind} MPH</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport FiveDayForecast from './FiveDayForecast';\nimport CurrentWeather from './CurrentWeather';\n\nclass WeatherDashboard extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { city, error } = value;\n          const {\n            condition,\n            temperature,\n            humidity,\n            wind,\n            icon\n          } = value.currentWeather;\n          return (\n            <React.Fragment>\n              {city ? (\n                <div className=\"container\">\n                  <CurrentWeather\n                    temperature={temperature}\n                    condition={condition}\n                    humidity={humidity}\n                    wind={wind}\n                    icon={icon}\n                  />\n                  <FiveDayForecast />\n                </div>\n              ) : (\n                <h3 className=\"text-danger text-center\">{error}</h3>\n              )}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default WeatherDashboard;\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport SearchForm from './components/layout/SearchForm';\nimport WeatherDashboard from './components/weather/WeatherDashboard';\nimport Footer from './components/layout/Footer';\n\nimport { Provider } from './context';\nimport './bootstrap.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <div className=\"App\">\n          <Header />\n          <SearchForm />\n          <WeatherDashboard />\n          {/* <Footer /> */}\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}